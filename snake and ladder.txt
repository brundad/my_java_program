import java.util.*;
class SnakesLadders
{  
	static class qentry 
	{ 
		int v;
		int dist;
	} 

	
	static int getMinDiceThrows(int move[], int n) 
	{ 
		int visited[] = new int[n]; 
		Queue<qentry> q = new LinkedList<>(); 
		qentry qe = new qentry(); 
		qe.v = 0; 
		qe.dist = 0; 

		
		visited[0] = 1; 
		q.add(qe); 

		
		while (!q.isEmpty()) 
		{ 
			qe = q.remove(); 
			int v = qe.v; 

			
			if (v == n - 1) 
				break; 

			
			for (int j = v + 1; j <= (v + 6) && j < n; ++j) 
			{ 
				
				if (visited[j] == 0) 
				{ 
					
					qentry a = new qentry(); 
					a.dist = (qe.dist + 1); 
					visited[j] = 1; 

				
					if (move[j] != -1) 
						a.v = move[j]; 
					else
						a.v = j; 
					q.add(a); 
				} 
			} 
		} 

	
		return qe.dist; 
	} 

	public static void main(String[] args) 
	{  
		Scanner in=new Scanner(System.in);
		int N = 100;
		String str1,str2;
		str1=in.nextLine();
		str2=in.nextLine();
		int moves[] = new int[N]; 
		for (int i = 0; i < N; i++) 
			moves[i] = -1; 

		// Ladders
		String[] temp1=str1.split(",");
		for(int i=0;i<temp1.length;i++){
		    String[] t1=temp1[i].split(":");
		    moves[Integer.parseInt(t1[0])]=Integer.parseInt(t1[1]);
		}

		// Snakes 
		String[] temp2=str2.split(",");
		for(int i=0;i<temp2.length;i++){
		    String[] t2=temp2[i].split(":");
		    moves[Integer.parseInt(t2[0])]=Integer.parseInt(t2[1]);
		}
   
		System.out.println("Min Dice throws required is " + 
						getMinDiceThrows(moves, N)); 
	} 
}
